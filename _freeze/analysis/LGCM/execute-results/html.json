{
  "hash": "62b4810f74b2c4f2b88a0511e7737053",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Latent Growth Curve Model\"\n---\n\n\n\n# Setting up\n\n## Loading packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Check out my packages\"}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(ggplot2)\nlibrary(patchwork)\n\nlibrary(lavaan)\n```\n:::\n\n\n\n## Loading functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Check out my functions\"}\nextract_years <- function(data, years, impute = FALSE, cog_total = FALSE, absorbing = FALSE) {\n  # Extracts cognitive function data for specified years from a dataset.\n  # Converts numeric cognitive status codes (1, 2, 3) into descriptive labels\n  # (\"Normal Cognition\", \"MCI\", \"Dementia\") for easier interpretation.\n  # Arguments:\n  #   - data: The input dataset containing cognitive function data.\n  #   - years: A vector of years for which data should be extracted.\n  # Returns:\n  #   - A dataset with ID and cognitive status columns for the specified years.\n  \n  # Create dynamic column names based on the years provided\n  cogfunction_cols <- paste0(\"cogfunction\", years)\n  cogtotal_cols    <- paste0(\"cogtot27_imp\", years)\n  \n  if(cog_total == FALSE) {\n    data <- data |>\n      # Select only the ID column and cognitive function columns for the specified years\n      select(ID, any_of(cogfunction_cols)) |>\n      mutate(across(!c(ID), ~ case_when(\n        .x == 1 ~ \"Normal Cognition\",\n        .x == 2 ~ \"MCI\",\n        .x == 3 ~ \"Dementia\",\n        TRUE ~ NA_character_  # To handle missing/other cases\n      )))\n  } else {\n    data <- data |>\n      # Select only the ID column and cognitive function columns for the specified years\n      select(ID, any_of(cogtotal_cols)) |>\n      rename_with( .cols = !ID, .fn = ~ stringr::str_replace(\n        string = .x,\n        pattern = \"cogtot27_imp\", \n        replacement = \"cog_score_\"))\n  }\n  \n  if(impute == TRUE){\n    data <- data |>\n      tidyr::pivot_longer(\n        cols = !ID,\n        names_to = \"Wave\",\n        values_to = \"Status\") |>\n      group_by(ID) |>\n      tidyr::fill(Status, .direction = \"down\") |>\n      ungroup() |>\n      tidyr::pivot_wider(names_from = \"Wave\", values_from = \"Status\")\n  }\n  \n  if(cog_total == FALSE & absorbing == TRUE) {\n    data <- data |>\n      tidyr::pivot_longer(\n        cols = !ID,\n        names_to = \"Wave\",\n        values_to = \"Status\") |>\n      group_by(ID) |>\n      mutate(Status = ifelse(cumany(Status == \"Dementia\" & !is.na(Status)), \"Dementia\", Status)) |>\n      ungroup() |>\n      tidyr::pivot_wider(names_from = \"Wave\", values_from = \"Status\")\n  } else if(cog_total == TRUE & absorbing == TRUE) {\n    data <- data |>\n      tidyr::pivot_longer(cols = !ID, names_to = \"Wave\", values_to = \"Score\") |>\n      group_by(ID) |>\n      mutate(Score = ifelse(cumany(Score <= 6 & !is.na(Score)), pmin(Score, 6), Score)) |>\n      pivot_wider(names_from = Wave, values_from = Score)\n  }\n  \n  return(data)\n}\n```\n:::\n\n\n\n## Loading data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(here::here(\"analysis/data/data.csv\"))\n```\n:::\n\n\n\n# Data processing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncog_totals <- data |> \n  extract_years(\n    years = seq(2016, 2022, by = 2),\n    cog_total = TRUE,\n    impute = TRUE,\n    absorbing = TRUE) |>\n  na.omit()\n\nhead(cog_totals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n# Groups:   ID [6]\n     ID cog_score_2016 cog_score_2018 cog_score_2020 cog_score_2022\n  <int>          <dbl>          <dbl>          <dbl>          <dbl>\n1     1             20             16             14             18\n2     2             19             16             17             18\n3     3              4              4              2              3\n4     4             13             13             13             12\n5     5             10             15             16             15\n6     6             15             16             16             14\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- c(\n  \"ID\", \"Gender\", \"Age\", \"Education_tri\",\n  paste0(\"Total_dep_\", seq(2016, 2022, by = 2)),\n  \"Total_p\")\n\ndata_final <- cog_totals |>\n  inner_join(data[, cols], by = \"ID\") |>\n  pivot_longer(\n    cols = starts_with(\"cog_score\"),\n    names_to = \"Wave\",\n    values_to = \"Score\",\n    names_prefix = \"cog_score_\") |>\n  mutate(\n    Wave = factor(Wave, levels = c(2016, 2018, 2020, 2022)),\n    Gender = factor(Gender, levels = c(0, 1)),\n    GED = factor(ifelse(Education_tri == 1, 1, 0)),\n    FE = factor(ifelse(Education_tri == 2, 1, 0)),\n    Education_tri = factor(Education_tri, levels = c(0, 1, 2)),\n    ) |>\n  relocate(Wave, .after = ID) |>\n  relocate(Score, .after = Wave) |>\n  select(!starts_with(paste0(\"Total_dep_20\", 18:22))) |>\n  filter(!is.na(Total_p)) |>\n  ungroup()\n\nhead(data_final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n     ID Wave  Score Gender   Age Education_tri Total_dep_2016 Total_p GED  \n  <int> <fct> <dbl> <fct>  <int> <fct>                  <int>   <int> <fct>\n1     1 2016     20 1         78 2                          0      22 0    \n2     1 2018     16 1         78 2                          0      22 0    \n3     1 2020     14 1         78 2                          0      22 0    \n4     1 2022     18 1         78 2                          0      22 0    \n5     2 2016     19 1         81 2                          2      41 0    \n6     2 2018     16 1         81 2                          2      41 0    \n# ℹ 1 more variable: FE <fct>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_trajectories <- data_final |>\n  ggplot(aes(x = Wave, y = Score, group = ID)) +\n  geom_line(alpha = 0.25) +\n  stat_summary(\n    aes(group = 1),\n    fun = mean,\n    geom = \"line\",\n    linewidth = 1.5,\n    color = \"red\"\n  ) +\n  labs(title = \"Observed trajectories of cognitive function\",\n       subtitle = \"Cognitive function scores across waves\",\n       x = \"Year\", y = \"Cognitive Score\") +\n  theme_classic() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, colour = \"grey11\", face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 12, colour = \"grey11\", face = \"bold\"),\n    axis.title = element_text(size = 10, colour = \"grey11\", face = \"bold\")\n  )\n\nobserved_trajectories\n```\n\n::: {.cell-output-display}\n![](LGCM_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "LGCM_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
---
title: "Procrastination & Dementia"
subtitle: "Markov Model Proposal"
author: 
  - name: "Cormac Monaghan"
    url: "https://c-monaghan.github.io/"
    orcid: "https://orcid.org/0000-0001-9012-3060"
    affiliation:
      - "Hamilton Institute, Maynooth University, Ireland"
      - "Department of Psychology, Maynooth University, Ireland"
  - name: "Rafael de Andrade Moral"
    url: "https://rafamoral.github.io/"
    orcid: "https://orcid.org/0000-0002-0875-3563"
    affiliation:
      - "Department of Mathematics and Statistics, Maynooth University, Ireland"
  - name: "Joanna McHugh Power"
    orcid: "https://orcid.org/0000-0002-7387-3107"
    affiliation: 
      - "Department of Psychology, Maynooth University, Ireland"
toc: true
toc-depth: 4
toc-title: On this page
bibliography: references.bib
csl: apa.csl
format: 
  html:
    theme: 
      light: united
    page-layout: full
    html-math-method: katex
    code-tools: true
    self-contained: true
    code-fold: true
    code-summary: "Show the code"
    include-in-header: 
      - file: ./html/github-corner.html
include-after-body: ./html/footer.html
execute: 
  warning: false
editor: source
---

```{r setting-up}
rm(list = ls())

# Packages
suppressMessages(library(dplyr))
library(ggplot2)
library(ggalluvial)

source(here::here("./02__Models/00__Markov_Functions.R"))

# Paths -----------------------------------------------------------------------
path_data <- "./01__Data/02__Processed/"
```

# Overview

The Health and Retirement Study (HRS) collects an extensive array of data related to cognitive health, physical well-being, economic status, and psychosocial factors. Among the information gathered, specific variables are used to assess and classify individuals into distinct categories of cognitive functioning. These classifications help to better understand the progression of cognitive decline, enabling researchers to track trends and identify factors that may influence cognitive health over time.

## Cognitive Function Categories

- **Normal Cognition:** Individuals in this category show no significant signs of cognitive impairment and are able to function independently in daily activities.
- **Mild Cognitive Impairment (MCI):** This stage reflects a slight but noticeable decline in cognitive abilities, such as memory or thinking skills, that goes beyond what would be expected with normal aging but does not yet interfere significantly with daily life.
- **Dementia:** This classification is marked by more severe cognitive deficits, impacting memory, reasoning, and the ability to perform everyday tasks. Dementia encompasses various neurodegenerative conditions, with Alzheimer's disease being the most common.

By tracking transitions between these categories, researchers can gain insights into the factors that contribute to cognitive decline and identify potential interventions to promote healthy aging.

# Langa-Weir Classifications

For previous waves of HRS data (1995 - 2020) there is a researcher contributed dataset of dementia classifications [@langa2023]. Researchers have used this dataset to study the trajectories of cognitive aging, dementia risk, and related health outcomes in older adults. However, with the recent release of the 2022 HRS data, **these classifications have yet to be updated**

## LWC2022 Package

In order to address this we developed the `LWC2022` package [@Monaghan2024] to replicate the methodology of @langa2023. This package automates the classification process, ensuring consistency with previous waves and providing researchers with an up-to-date resource for studying cognitive decline and dementia across all available HRS waves. @fig-lwc illustrates the LWC workflow.

![LWC Workflow](./images/LWC_Workflow.png){#fig-lwc}

# Dementia Dataset

Our updated dataset contains 13 columns of cognitive classifications spanning from 1996 to 2022. These columns reflect dementia status across each wave, using the same criteria and structure as the original Langa-Weir dataset, now extended to include the most recent 2022 wave.

```{r data}
data <- readxl::read_xlsx(here::here(path_data, "data.xlsx"))

dementia_data <- data |>
  count_transitions(years = seq(1996, 2022, by = 2))

glimpse(dementia_data)
```

## Missing data

Since the participant pool is drawn from the 2020 wave of the HRS data, any analysis that looks back at previous waves will inevitably encounter missing data. Not all participants were included in earlier waves, leading to gaps in the data. @fig-missing-data displays the frequency of missing cognitive test data across each HRS wave.

```{r}
#| fig-width: 8
#| label: fig-missing-data
#| fig-cap: Occurance of missing data across HRS waves (participants were gathered from the 2020 HRS wave [in red])

# Dynamic colours
colours <- c(rep("#2e2e2e", times = 12), "red", "#2e2e2e")

data |>
  select(any_of(paste0("cogtot27_imp", 1996:2022))) |>
  rename_with( ~ stringr::str_replace(., "cogtot27_imp", ""), starts_with("cogtot27")) |>
  visdat::vis_dat(palette = "cb_safe") +
  labs(title = "Missing data across HRS Waves (1996 - 2022)",
       subtitle = "Total Cognitive Scores") +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12, face = "bold", colour = "#2e2e2e"),
    plot.subtitle = element_text(hjust = 0.5, size = 10, colour = "#2e2e2e"),
    axis.text.x = element_text(colour = colours)) +
  ggeasy::easy_remove_legend() +
  ggeasy::easy_x_axis_labels_size(size = 9)

```

The HRS had its most recent participant intake in 2016, which explains the notable decline in missing data occurrences from that point onward. As new participants were not added after 2016, the dataset becomes more complete in subsequent waves, with fewer missing values. 

Given this shift, we will conduct our analysis on both: 

- A full dataset (1996 - 2022) 
- A reduced dataset (2016 - 2022).

## Exploratory Data Analysis

::: {.panel-tabset}

# 1996 - 2022

## Cognitive Test Scores

Initially, we will plot a distribution of the cognitive test scores (ranging from 0 - 27) across time for all HRS participants.

```{r}
#| fig-width: 12
#| label: fig-cognitive-test-scores_full
#| fig-cap: Cognitive test scores (1996 - 2022)

plot_cognitive_scores(data = data, year = 1996)
```

## Classification proportion per year

@fig-dementia-proportions-full shows the proportion of dementia classifications per HRS wave. The variable **Missing** represents the procrastination HRS respondents who were not yet interviewed by the HRS. Since the analysis focuses on participants included in the 2020 HRS wave, any retroactive analysis of prior waves may result in missing data for certain individuals

```{r}
#| fig-width: 12
#| label: fig-dementia-proportions-full
#| fig-cap: Proportion of dementia classifications (1996 - 2022)

# Plotting proportions --------------------------------------------------------
dementia_data %>%
  ggplot(aes(x = Wave, fill = Status)) +
  geom_bar(position = "fill", 
           alpha = 0.5,
           width = 0.5,
           colour = "black") +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Proportion of Cognitive Status Classifications (1996 - 2022)", 
       x = "", y = "Percentage") +
  scale_fill_viridis_d(direction = -1) +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
        axis.text = element_text(size = 10),
        axis.title = element_text(size = 10),
        text = element_text(size = 10)) +
  ggeasy::easy_move_legend("bottom") +
  ggeasy::easy_remove_legend_title()
```

## Dementia transitions per year

@fig-dementia-transitions-full is an alluvial graph illustrating the transitions in cognitive classifications from one HRS wave to the next.

```{r}
#| fig-width: 12
#| label: fig-dementia-transitions-full
#| fig-cap: Dementia transitions (1996 - 2022)

dementia_data |>
  plot_transitions(size = 2.5)
```

# 2016 - 2022

## Cognitive Test Scores

Initially, we will plot a distribution of the cognitive test scores (ranging from 0 - 27) across time for all HRS participants.

```{r}
#| fig-width: 12
#| label: fig-cognitive-test-scores_reduced
#| fig-cap: Cognitive test scores (2016 - 2022)

plot_cognitive_scores(data = data, year = 2016)
```

## Classification proportion per year

@fig-dementia-proportions-reduced shows the proportion of dementia classifications from HRS 2016 - 2022. The variable **Missing** represents the procrastination HRS respondents who were not yet interviewed by the HRS. Since the analysis focuses on participants included in the 2020 HRS wave, any retroactive analysis of prior waves may result in missing data for certain individuals

```{r}
#| fig-width: 12
#| label: fig-dementia-proportions-reduced
#| fig-cap: Proportion of dementia classifications per year

# Plotting proportions --------------------------------------------------------
data |>
  count_transitions(years = seq(2016, 2022, by = 2)) |>
  ggplot(aes(x = Wave, fill = Status)) +
  geom_bar(position = "fill", alpha = 0.5, colour = "black") +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Proportion of Cognitive Status Classifications (2016 - 2022)", 
       x = "", y = "Percentage") +
  scale_fill_viridis_d(direction = -1) +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
        axis.text = element_text(size = 10),
        axis.title = element_text(size = 10),
        text = element_text(size = 10)) +
  ggeasy::easy_move_legend("bottom") +
  ggeasy::easy_remove_legend_title()
```

## Dementia transitions per year

@fig-dementia-transitions-reduced is an alluvial graph illustrating the transitions in cognitive classifications from one HRS wave to the next.

```{r}
#| fig-width: 12
#| label: fig-dementia-transitions-reduced
#| fig-cap: Dementia transitions (2016 - 2022)

data |>
  count_transitions(years = seq(2016, 2022, by = 2)) |>
  plot_transitions(size = 2.5)
```

:::

# Markov Modelling

In this section, we apply Markov modelling to analyze the transitions between cognitive states (Normal Cognition, Mild Cognitive Impairment [MCI], and Dementia) using longitudinal data from the Health and Retirement Study (HRS) from 1996 to 2022. By modeling these transitions, we aim to understand the probabilities of moving between different cognitive states over time.

::: {.panel-tabset}

# 1996 - 2022

## Data preparation

The first step is to prepare the transition dataset. We start by transforming the data to create a record of transitions from one cognitive state to another between consecutive waves (1996 - 2022).

Once the transitions are identified, we calculate the probabilities of each state-to-state transition. These probabilities are computed by counting the occurrences of each transition and dividing by the total number of transitions.

```{r}
tran_prob_full <- data |>
  extract_years(years = seq(1996, 2022, by = 2)) |>
  create_transitions(absorbing = TRUE) |>
  calculate_probabilties()

tran_prob_full |>
  mutate(prop = round(prop, digits = 3)) |>
  head(n = 9) |>
  gt::gt() |>
  gtExtras::gt_theme_538() |>
  gt::cols_align(align = "center") |>
  gt::tab_header(title = "Overall Transition Probabilties (1996 - 2022)") |>
  gt::tab_options(table.width = gt::pct(100)) |>
  gt::opt_align_table_header(align = "center")
```

## Creating transition matrix

Next, we organize the transition probabilities into a matrix format, where rows represent the "from" states and columns represent the "to" states. The matrix entries contain the transition probabilities for each state-to-state pair

```{r}
tran_matrix_full <- tran_prob_full |>
  transition_matrix() |>
  normalise()

tran_matrix_full
```

This code creates a $3 \times 3$ matrix (for the three states: Normal Cognition, MCI, and Dementia) and populates it with the transition probabilities. 

## Visualising the matrix

To make the transition matrix more interpretable, we visualize the probabilities using a heat map (@fig-transition-matrix-full)

```{r}
#| fig-width: 8
#| label: fig-transition-matrix-full
#| fig-cap: Transition Matrix

plot_matrix(data = t(tran_matrix_full), year = 1996)

```

# 2016 - 2022

## Data preparation

The first step is to prepare the transition dataset. We start by transforming the data to create a record of transitions from one cognitive state to another between consecutive waves (2016 - 2022).

Once the transitions are identified, we calculate the probabilities of each state-to-state transition. These probabilities are computed by counting the occurrences of each transition and dividing by the total number of transitions.

```{r}
tran_prob_reduced <- data |>
  extract_years(years = seq(2016, 2022, by = 2)) |>
  create_transitions(absorbing = TRUE) |>
  calculate_probabilties()

tran_prob_reduced |>
  mutate(prop = round(prop, digits = 3)) |>
  head(n = 9) |>
  gt::gt() |>
  gtExtras::gt_theme_538() |>
  gt::cols_align(align = "center") |>
  gt::tab_header(title = "Overall Transition Probabilties (2016 - 2022)") |>
  gt::tab_options(table.width = gt::pct(100)) |>
  gt::opt_align_table_header(align = "center")

```

## Creating transition matrix

Next, we organize the transition probabilities into a matrix format, where rows represent the "from" states and columns represent the "to" states. The matrix entries contain the transition probabilities for each state-to-state pair. Additionally, we normalise the matrix so 

```{r}
tran_matrix_reduced <- tran_prob_reduced |>
  transition_matrix() |>
  normalise()

tran_matrix_reduced
```

This code creates a $3 \times 3$ matrix (for the three states: Normal Cognition, MCI, and Dementia) and populates it with the transition probabilities. 

## Visualising the matrix

To make the transition matrix more interpretable, we visualize the probabilities using a heat map (@fig-transition-matrix-reduced)

```{r}
#| fig-width: 8
#| label: fig-transition-matrix-reduced
#| fig-cap: Transition Matrix

plot_matrix(data = t(tran_matrix_reduced), year = 2016)

```

:::

# Per Wave Probabilities

Instead of looking at the overall probabilities of transitioning between cognitive states, we now examine how these transition probabilities change across multiple waves of data collection. This allows us to understand how cognitive states (Normal Cognition, Mild Cognitive Impairment (MCI), and Dementia) evolve over time within the study population.

## Creating per wave transition matrices

We begin we create transition matrices for each wave of data. Each matrix will represent the probabilities of transitioning from one cognitive state to another within a given wave.

```{r}
create_transition_matrix <- function(wave_data) {
  # Aggregate by 'from' and 'to' states to sum transition probabilities
  wave_data_agg <- wave_data |>
    dplyr::group_by(from, to) |>
    dplyr::summarise(transition_prob = sum(prop), .groups = "drop")
  
  wave_matrix <- wave_data_agg |>
    tidyr::pivot_wider(
      names_from = to,
      values_from = transition_prob,
      values_fill = 0
    ) |>
    tibble::column_to_rownames("from") |>
    as.matrix()
  
  return(wave_matrix)
}

# Calculating transition matrix
tran_matrices_reduced <- data |>
  extract_years(years = seq(1998, 2022, by = 2)) |>
  create_transitions(absorbing = TRUE) |>
  group_by(Wave) |>
  calculate_probabilties() |>
  group_map( ~ create_transition_matrix(.x), .keep = TRUE)

tran_matrices_reduced[[13]] <- NULL

head(tran_matrices_reduced, n = 3)
```

## Reshaping matrix

Once we have the transition matrices, we need to reshape them into a long format for easier plotting and further analysis. In the long format, each row represents a single transition, along with the corresponding transition probability and the wave of data collection.

```{r}
# Function to reshape each matrix and add the Wave information
reshape_matrix <- function(matrix, wave) {
  matrix |>
    as.data.frame() |>
    tibble::rownames_to_column(var = "from") |>
    tidyr::pivot_longer(cols = -from,
                        names_to = "to",
                        values_to = "transition_prob") |>
    mutate(Wave = wave)
}

# I want my matrix in a certain order
tran_matrices_reduced <- lapply(tran_matrices_reduced, function(mat) {
  mat[c("Normal Cognition", "MCI", "Dementia"), c("Normal Cognition", "MCI", "Dementia")] |>
    normalise()
})

# Creating a singular dataframe of transition probabilities --------------------
wave_names <- c(seq(1998, 2020, by = 2))

# Apply the reshaping function to each matrix and combine the results
transition_probabilties_long <- purrr::map2_dfr(tran_matrices_reduced, wave_names, reshape_matrix) |>
  mutate(
    transition_prob = round(transition_prob, digits = 3),
    from = factor(from, levels = c("Normal Cognition", "MCI", "Dementia"))
  )

# Outputting table
DT::datatable(
  transition_probabilties_long,
  filter = "top",
  colnames = c("Prob" = "transition_prob"),
  options = list(pageLength = 6, autoWidth = TRUE)
)
```

## Plotting transition probabilities

Finally, we plot the transition probabilities as heatmaps to visualize how they evolve across different waves. We will create an animated GIF that cycles through the waves, showing the changes in transition probabilities over time.

```{r fig.width=8, fig.show="animate", ffmpeg.format="gif", dev="png"}

plot_transition_wave <- function(data, wave) {
  # Main transitions per wave
  filter_data <- data.frame(
    from = c(
      "Normal Cognition",
      "Normal Cognition",
      "Normal Cognition",
      "MCI",
      "MCI",
      "MCI",
      "Dementia",
      "Dementia",
      "Dementia"
    ),
    to = c(
      "Normal Cognition",
      "MCI",
      "Dementia",
      "Normal Cognition",
      "MCI",
      "Dementia",
      "Normal Cognition",
      "MCI",
      "Dementia"
    )
  )
  
  data |>
    semi_join(filter_data, by = c("from", "to")) |>
    filter(Wave == wave) |>
    ggplot(aes(x = to, y = from, fill = transition_prob)) +
    geom_tile() +
    geom_text(aes(label = transition_prob), size = 5) +
    scale_fill_viridis_c(alpha = 0.8) +
    labs(
      title = paste0("Transition Probabilities Across Cognitive States (", wave, ")"),
      x = "To",
      y = "From",
      fill = "Prob"
    ) +
    theme_light() +
    theme(
      plot.title = element_text(
        hjust = 0.5,
        size = 12,
        face = "bold"
      ),
      axis.title = element_text(size = 10),
      axis.text = element_text(size = 8),
      panel.grid = element_blank(),
      panel.border = element_blank()
    )
}

for (wave in wave_names) {
  print(plot_transition_wave(data = transition_probabilties_long, wave = wave))
}

```

# Cognitive Scores

In this section, we incorporate participants' cognitive scores (from 2016 - 2022) into our analysis. The cognitive scores are visualized in @fig-cognitive-test-scores_reduced, which provides a summary of the data. 

```{r}
# Data processing --------------------------------------------------------------
ed_level <- c(
  "No_degree", "GED", "High_school", "College_2_years", 
  "College_4_years", "Masters", "PhD", "Other")

ed_label <- c(
  "No degree", "GED", "High school", "College (2 years)", 
  "College (4 years)", "Masters", "PhD", "Other")

# Variables to add to datafile
adding <- data |>
  dplyr::select(ID, Age_2022, Education, Total_p) |>
  dplyr::mutate(
    Education = dplyr::case_when(
      Education == 0 ~ "No_degree",
      Education == 1 ~ "GED",
      Education == 2 ~ "High_school",
      Education == 3 ~ "College_2_years",
      Education == 4 ~ "College_4_years",
      Education == 5 ~ "Masters",
      Education == 6 ~ "PhD",
      Education == 9 ~ "Other"
    ),
    Education = factor(Education, levels = ed_level, labels = ed_label)
  )
 
cog_data <- data |>
  extract_years(years = seq(2016, 2022, by = 2), scores = TRUE) |>
  process_data(absorbing = TRUE) |>
  dplyr::inner_join(adding, by = "ID") |>
  backtrack_age() |>
  dplyr::group_by(ID) |>
  dplyr::filter(all(!is.na(Score))) |>
  dplyr::ungroup() |>
  dplyr::filter(!is.na(Total_p)) |>
  dplyr::mutate(Total_p = ifelse(Year == 2022, Total_p, NA)) 


# Outputting table
cog_data |>
  dplyr::relocate(c(Age, Education), .after = Year) |>
  dplyr::rename(Procrastination = Total_p) |>
  head(n = 12) |>
  gt::gt() |>
  gtExtras::gt_theme_538() |>
  gt::cols_align(align = "center") |>
  gt::tab_header(title = "Cognition Scores (2016 - 2022)") |>
  gt::tab_options(table.width = gt::pct(100)) |>
  gt::opt_align_table_header(align = "center")
```

## Visualisations

To explore the relationships between cognitive scores and other variables, we create a series of visualizations. These plots help us identify trends, correlations, and potential areas for further investigation.

::: {.panel-tabset}

# Age

The first visualization (@fig-scatter-age) examines the relationship between cognitive scores and age. A scatter plot is used to display the data, with points jittered to reduce overlap.

```{r}
#| fig-width: 12
#| label: fig-scatter-age
#| fig-cap: Scatter plot of age vs cognitive scores

cog_data |>
  ggplot(aes(x = Age, y = Score, colour = Class)) +
  geom_jitter(size = 2, width = 0.2, height = 0.2) +
  scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  scale_y_continuous(breaks = seq(0, 27, by = 5)) +
  facet_wrap(~ Year) +
  theme_bw() +
  ggeasy::easy_remove_legend_title() +
  ggeasy::easy_move_legend(to = "bottom")
```

# Education

The second visualization (@fig-education) explores the relationship between cognitive scores and education levels. A bar plot is used to display the mean cognitive score for each education level, faceted by year.

```{r}
#| fig-width: 12
#| label: fig-education
#| fig-cap: Mean cognitive score by education level 

cog_data |>
  group_by(Education, Year) |>
  summarise(Score = mean(Score), .groups = "keep") |>
  ggplot(aes(x = Education, y = Score, fill = forcats::fct_rev(Education))) +
  geom_bar(stat = "identity", width = 0.75, alpha = 0.6) +
  scale_y_continuous(breaks = seq(0, 27, by = 3)) +
  labs(title = "Mean Cognitive Score by Education Level",
       subtitle = "Across Time", x = "", y = "Total Cognitive Score") +
  facet_wrap( ~ Year) +
  theme_minimal() +
  coord_flip() +
  ggeasy::easy_remove_legend() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
    axis.text.y = element_text(size = 12),
    strip.text = element_text(size = 10, face = "bold"))

```

# Procrastination

The final visualization (@fig-scatter-score-procrastination) investigates the relationship between cognitive scores and procrastination tendencies. A scatter plot is used to display the data for the year 2022.

```{r}
#| fig-width: 12
#| label: fig-scatter-score-procrastination
#| fig-cap: Scatter plot of procrastination vs cognitive scores

cog_data |>
  filter(Year == 2022) |>
  ggplot(aes(x = Total_p, y = Score)) +
  geom_jitter(width = 0.25, size = 1.5, alpha = 0.5) +
  labs(
    title = "Procrastination vs. Cognitive Classification Score",
    x = "Total Procrastination", 
    y = "Cognitive Classification Score") +
  scale_x_continuous(breaks = seq(0, 60, by = 10)) +
  scale_y_continuous(breaks = seq(0, 27, by = 5)) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10))

```

:::

